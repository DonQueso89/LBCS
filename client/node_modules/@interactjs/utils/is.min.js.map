{
	"version": 3,
	"sources": [
		"is.ts"
	],
	"names": [
		"isWindow",
		"win",
		"window",
		"thing",
		"docFrag",
		"object",
		"nodeType",
		"func",
		"number",
		"bool",
		"string",
		"element",
		"_window",
		"getWindow",
		"test",
		"Element",
		"nodeName",
		"plainObject",
		"constructor",
		"toString",
		"array",
		"length",
		"splice"
	],
	"mappings": "OAEOA,MAAc,2BACdC,MAAS,yBAET,MAAMC,OAAUC,GACrBA,IAAUF,EAAIC,QAAUF,EAASG,UAE5B,MAAMC,QAAWD,GACtBE,OAAOF,IAA6B,KAAnBA,EAAMG,gBAElB,MAAMD,OAAUF,KACnBA,GAA2B,iBAAVA,SAEd,MAAMI,KAAQJ,GACF,mBAAVA,SAEF,MAAMK,OAAUL,GACJ,iBAAVA,SAEF,MAAMM,KAAQN,GACF,kBAAVA,SAEF,MAAMO,OAAUP,GACJ,iBAAVA,SAEF,MAAMQ,QAAWR,IACtB,IAAKA,GAA2B,iBAAVA,EAAuB,OAAO,EAEpD,MAAMS,EAAUX,EAAIY,UAAUV,IAAUF,EAAIC,OAE5C,MAAQ,kBAAkBY,YAAYF,EAAQG,SAC1CZ,aAAiBS,EAAQG,QACN,IAAnBZ,EAAMG,UAA4C,iBAAnBH,EAAMa,iBAGpC,MAAMC,YAA8Bd,GACzCE,OAAOF,MACLA,EAAMe,aACR,oBAAoBJ,KAAKX,EAAMe,YAAYC,mBAEtC,MAAMC,MAA4BjB,GACtCE,OAAOF,SACiB,IAAjBA,EAAMkB,QACdd,KAAKJ,EAAMmB",
	"sourcesContent": [
		"// tslint:disable variable-name\n\nimport isWindow from './isWindow'\nimport win from './window'\n\nexport const window = (thing: any): thing is Window =>\n  thing === win.window || isWindow(thing)\n\nexport const docFrag = (thing: any): thing is DocumentFragment =>\n  object(thing) && thing.nodeType === 11\n\nexport const object = (thing: any): thing is { [index: string]: any } =>\n  !!thing && (typeof thing === 'object')\n\nexport const func = (thing: any): thing is (...args: any[]) => any =>\n  typeof thing === 'function'\n\nexport const number = (thing: any): thing is number =>\n  typeof thing === 'number'\n\nexport const bool = (thing: any): thing is boolean =>\n  typeof thing === 'boolean'\n\nexport const string = (thing: any): thing is string =>\n  typeof thing === 'string'\n\nexport const element = (thing: any): thing is Interact.Element => {\n  if (!thing || (typeof thing !== 'object')) { return false }\n\n  const _window = win.getWindow(thing) || win.window\n\n  return (/object|function/.test(typeof _window.Element)\n    ? thing instanceof _window.Element // DOM2\n    : thing.nodeType === 1 && typeof thing.nodeName === 'string')\n}\n\nexport const plainObject: typeof object = (thing: any): thing is { [index: string]: any } =>\n  object(thing) &&\n  !!thing.constructor &&\n  /function Object\\b/.test(thing.constructor.toString())\n\nexport const array = <T extends unknown>(thing: any): thing is T[] =>\n  (object(thing) &&\n  (typeof thing.length !== 'undefined') &&\n  func(thing.splice))\n"
	]
}