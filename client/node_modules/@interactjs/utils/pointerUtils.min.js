import t from"./browser.min.js";import e from"./domObjects.min.js";import*as n from"./domUtils.min.js";import o from"./hypot.min.js";import*as r from"./is.min.js";import i from"./pointerExtend.min.js";export function copyCoords(t,e){t.page=t.page||{},t.page.x=e.page.x,t.page.y=e.page.y,t.client=t.client||{},t.client.x=e.client.x,t.client.y=e.client.y,t.timeStamp=e.timeStamp}export function setCoordDeltas(t,e,n){t.page.x=n.page.x-e.page.x,t.page.y=n.page.y-e.page.y,t.client.x=n.client.x-e.client.x,t.client.y=n.client.y-e.client.y,t.timeStamp=n.timeStamp-e.timeStamp}export function setCoordVelocity(t,e){const n=Math.max(e.timeStamp/1e3,.001);t.page.x=e.page.x/n,t.page.y=e.page.y/n,t.client.x=e.client.x/n,t.client.y=e.client.y/n,t.timeStamp=n}export function setZeroCoords(t){t.page.x=0,t.page.y=0,t.client.x=0,t.client.y=0}export function isNativePointer(t){return t instanceof e.Event||t instanceof e.Touch}export function getXY(t,e,n){return t=t||"page",(n=n||{}).x=e[t+"X"],n.y=e[t+"Y"],n}export function getPageXY(e,n){return n=n||{x:0,y:0},t.isOperaMobile&&isNativePointer(e)?(getXY("screen",e,n),n.x+=window.scrollX,n.y+=window.scrollY):getXY("page",e,n),n}export function getClientXY(e,n){return n=n||{},t.isOperaMobile&&isNativePointer(e)?getXY("screen",e,n):getXY("client",e,n),n}export function getPointerId(t){return r.number(t.pointerId)?t.pointerId:t.identifier}export function setCoords(t,e,n){const o=e.length>1?pointerAverage(e):e[0],r={};getPageXY(o,r),t.page.x=r.x,t.page.y=r.y,getClientXY(o,r),t.client.x=r.x,t.client.y=r.y,t.timeStamp=n}export function getTouchPair(t){const e=[];return r.array(t)?(e[0]=t[0],e[1]=t[1]):"touchend"===t.type?1===t.touches.length?(e[0]=t.touches[0],e[1]=t.changedTouches[0]):0===t.touches.length&&(e[0]=t.changedTouches[0],e[1]=t.changedTouches[1]):(e[0]=t.touches[0],e[1]=t.touches[1]),e}export function pointerAverage(t){const e={pageX:0,pageY:0,clientX:0,clientY:0,screenX:0,screenY:0};for(const n of t)for(const t in e)e[t]+=n[t];for(const n in e)e[n]/=t.length;return e}export function touchBBox(t){if(!(t.length||t.touches&&t.touches.length>1))return null;const e=getTouchPair(t),n=Math.min(e[0].pageX,e[1].pageX),o=Math.min(e[0].pageY,e[1].pageY),r=Math.max(e[0].pageX,e[1].pageX),i=Math.max(e[0].pageY,e[1].pageY);return{x:n,y:o,left:n,top:o,right:r,bottom:i,width:r-n,height:i-o}}export function touchDistance(t,e){const n=e+"X",r=e+"Y",i=getTouchPair(t),c=i[0][n]-i[1][n],p=i[0][r]-i[1][r];return o(c,p)}export function touchAngle(t,e){const n=e+"X",o=e+"Y",r=getTouchPair(t),i=r[1][n]-r[0][n],c=r[1][o]-r[0][o];return 180*Math.atan2(c,i)/Math.PI}export function getPointerType(t){return r.string(t.pointerType)?t.pointerType:r.number(t.pointerType)?[void 0,void 0,"touch","pen","mouse"][t.pointerType]:/touch/.test(t.type)||t instanceof e.Touch?"touch":"mouse"}export function getEventTargets(t){const e=r.func(t.composedPath)?t.composedPath():t.path;return[n.getActualElement(e?e[0]:t.target),n.getActualElement(t.currentTarget)]}export function newCoords(){return{page:{x:0,y:0},client:{x:0,y:0},timeStamp:0}}export function coordsToEvent(t){return{coords:t,get page(){return this.coords.page},get client(){return this.coords.client},get timeStamp(){return this.coords.timeStamp},get pageX(){return this.coords.page.x},get pageY(){return this.coords.page.y},get clientX(){return this.coords.client.x},get clientY(){return this.coords.client.y},get pointerId(){return this.coords.pointerId},get target(){return this.coords.target},get type(){return this.coords.type},get pointerType(){return this.coords.pointerType},get buttons(){return this.coords.buttons},preventDefault(){}}}export{i as pointerExtend};
//# sourceMappingURL=pointerUtils.min.js.map