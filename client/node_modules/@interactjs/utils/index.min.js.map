{
	"version": 3,
	"sources": [
		"index.ts"
	],
	"names": [
		"arr",
		"dom",
		"is",
		"pointer",
		"rect",
		"win",
		"warnOnce",
		"method",
		"message",
		"warned",
		"window",
		"console",
		"warn",
		"apply",
		"this",
		"arguments",
		"copyAction",
		"dest",
		"src",
		"name",
		"axis",
		"edges",
		"default"
	],
	"mappings": "UAAYA,MAAS,yBACTC,MAAS,8BACTC,MAAQ,wBACRC,MAAa,kCACbC,MAAU,uBACfC,MAAS,yBAET,SAASC,SAAsBC,EAAiCC,GACrE,IAAIC,GAAS,EAGb,OAAO,WAML,OALKA,IACFJ,EAAYK,OAAOC,QAAQC,KAAKJ,GACjCC,GAAS,GAGJF,EAAOM,MAAMC,KAAMC,mBAIvB,SAASC,WAAYC,EAA4BC,GAKtD,OAJAD,EAAKE,KAAQD,EAAIC,KACjBF,EAAKG,KAAQF,EAAIE,KACjBH,EAAKI,MAAQH,EAAIG,MAEVJ,SAGAK,uBAA0B,0BAC1BA,qBAAwB,wBACxBA,sBAAyB,yBACzBA,2BAA8B,8BAC9BA,qBAAwB,wBACxBA,kCAAqC,qCACrCA,mBAAsB,sBACtBjB,SAAKL,SAAKC,SAAKC,QAAIC,aAASC",
	"sourcesContent": [
		"import * as arr from './arr'\nimport * as dom from './domUtils'\nimport * as is from './is'\nimport * as pointer from './pointerUtils'\nimport * as rect from './rect'\nimport win from './window'\n\nexport function warnOnce<T> (this: T, method: (...args: any[]) => any, message: string) {\n  let warned = false\n\n  // eslint-disable-next-line no-shadow\n  return function (this: T) {\n    if (!warned) {\n      (win as any).window.console.warn(message)\n      warned = true\n    }\n\n    return method.apply(this, arguments)\n  }\n}\n\nexport function copyAction (dest: Interact.ActionProps, src: Interact.ActionProps) {\n  dest.name  = src.name\n  dest.axis  = src.axis\n  dest.edges = src.edges\n\n  return dest\n}\n\nexport { default as browser } from './browser'\nexport { default as clone } from './clone'\nexport { default as extend } from './extend'\nexport { default as getOriginXY } from './getOriginXY'\nexport { default as hypot } from './hypot'\nexport { default as normalizeListeners } from './normalizeListeners'\nexport { default as raf } from './raf'\nexport { win, arr, dom, is, pointer, rect }\n"
	]
}