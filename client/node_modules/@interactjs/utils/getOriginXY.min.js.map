{
	"version": 3,
	"sources": [
		"getOriginXY.ts"
	],
	"names": [
		"rectToXY",
		"resolveRectLike",
		"target",
		"element",
		"actionName",
		"actionOptions",
		"options",
		"origin",
		"originRect",
		"x",
		"y"
	],
	"mappings": "mBAASA,qBAAUC,MAAuB,8BAE3B,CACbC,EACAC,EACAC,KAEA,MAAMC,EAAiBH,EAAOI,QAAgBF,GAExCG,EADeF,GAAiBA,EAAcE,QACrBL,EAAOI,QAAQC,OAExCC,EAAaP,EAAgBM,EAAQL,EAAQC,EAAS,CAACD,GAAUC,IAEvE,OAAOH,EAASQ,IAAe,CAAEC,EAAG,EAAGC,EAAG",
	"sourcesContent": [
		"import { rectToXY, resolveRectLike } from './rect'\n\nexport default function (\n  target: Interact.HasGetRect & { options: Interact.PerActionDefaults },\n  element: Node,\n  actionName?: Interact.ActionName,\n) {\n  const actionOptions = (target.options as any)[actionName]\n  const actionOrigin = actionOptions && actionOptions.origin\n  const origin = actionOrigin || target.options.origin\n\n  const originRect = resolveRectLike(origin, target, element, [target && element])\n\n  return rectToXY(originRect) || { x: 0, y: 0 }\n}\n"
	]
}