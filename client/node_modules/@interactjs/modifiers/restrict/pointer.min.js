import t from"../../utils/extend.min.js";import*as e from"../../utils/is.min.js";import*as o from"../../utils/rect.min.js";import{makeModifier as i}from"../base.min.js";export function getRestrictionRect(t,i,r){return e.func(t)?o.resolveRectLike(t,i.interactable,i.element,[r.x,r.y,i]):o.resolveRectLike(t,i.interactable,i.element)}const r={start({rect:e,startOffset:o,state:i,interaction:r,pageCoords:n}){const{options:s}=i,{elementRect:l}=s,c=t({left:0,top:0,right:0,bottom:0},s.offset||{});if(e&&l){const t=getRestrictionRect(s.restriction,r,n);if(t){const o=t.right-t.left-e.width,i=t.bottom-t.top-e.height;o<0&&(c.left+=o,c.right+=o),i<0&&(c.top+=i,c.bottom+=i)}c.left+=o.left-e.width*l.left,c.top+=o.top-e.height*l.top,c.right+=o.right-e.width*(1-l.right),c.bottom+=o.bottom-e.height*(1-l.bottom)}i.offset=c},set({coords:t,interaction:e,state:i}){const{options:r,offset:n}=i,s=getRestrictionRect(r.restriction,e,t);if(!s)return;const l=o.xywhToTlbr(s);t.x=Math.max(Math.min(l.right-n.right,t.x),l.left+n.left),t.y=Math.max(Math.min(l.bottom-n.bottom,t.y),l.top+n.top)},defaults:{restriction:null,elementRect:null,offset:null,endOnly:!1,enabled:!1}};export default i(r,"restrict");export{r as restrict};
//# sourceMappingURL=pointer.min.js.map