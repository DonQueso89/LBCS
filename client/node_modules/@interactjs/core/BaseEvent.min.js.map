{
	"version": 3,
	"sources": [
		"BaseEvent.ts"
	],
	"names": [
		"BaseEvent",
		"interaction",
		"this",
		"_interaction",
		"_proxy",
		"constructor",
		"type",
		"target",
		"currentTarget",
		"interactable",
		"timeStamp",
		"immediatePropagationStopped",
		"propagationStopped",
		"preventDefault",
		"stopPropagation",
		"stopImmediatePropagation"
	],
	"mappings": "OAAO,MAAMA,UAUXC,kBACE,OAAOC,KAAKC,aAAaC,OAG3BC,YAAaJ,GAAmCC,KAbhDI,UAagD,EAAAJ,KAZhDK,YAYgD,EAAAL,KAXhDM,mBAWgD,EAAAN,KAVhDO,kBAUgD,EAAAP,KAThDC,kBASgD,EAAAD,KARhDQ,eAQgD,EAAAR,KAPhDS,6BAA8B,EAOkBT,KANhDU,oBAAqB,EAOnBV,KAAKC,aAAeF,EAGtBY,kBAKAC,kBACEZ,KAAKU,oBAAqB,EAM5BG,2BACEb,KAAKS,4BAA8BT,KAAKU,oBAAqB,kBAIlDZ",
	"sourcesContent": [
		"export class BaseEvent<T extends Interact.ActionName = any> {\n  type: string\n  target: EventTarget\n  currentTarget: EventTarget\n  interactable: Interact.Interactable\n  _interaction: Interact.Interaction<T>\n  timeStamp: any\n  immediatePropagationStopped = false\n  propagationStopped = false\n\n  get interaction (): Interact.InteractionProxy<T> {\n    return this._interaction._proxy\n  }\n\n  constructor (interaction: Interact.Interaction) {\n    this._interaction = interaction\n  }\n\n  preventDefault () {}\n\n  /**\n   * Don't call any other listeners (even on the current target)\n   */\n  stopPropagation () {\n    this.propagationStopped = true\n  }\n\n  /**\n   * Don't call listeners on the remaining targets\n   */\n  stopImmediatePropagation () {\n    this.immediatePropagationStopped = this.propagationStopped = true\n  }\n}\n\nexport default BaseEvent\n"
	]
}