{
	"version": 3,
	"sources": [
		"InteractEvent.ts"
	],
	"names": [
		"extend",
		"getOriginXY",
		"hypot",
		"BaseEvent",
		"defaults",
		"InteractEvent",
		"constructor",
		"interaction",
		"event",
		"actionName",
		"phase",
		"element",
		"preEnd",
		"type",
		"super",
		"this",
		"target",
		"currentTarget",
		"relatedTarget",
		"screenX",
		"screenY",
		"button",
		"buttons",
		"ctrlKey",
		"shiftKey",
		"altKey",
		"metaKey",
		"page",
		"client",
		"delta",
		"rect",
		"x0",
		"y0",
		"t0",
		"dt",
		"duration",
		"clientX0",
		"clientY0",
		"velocity",
		"speed",
		"swipe",
		"timeStamp",
		"dragEnter",
		"dragLeave",
		"axes",
		"interactable",
		"deltaSource",
		"options",
		"origin",
		"starting",
		"ending",
		"prevEvent",
		"coords",
		"start",
		"cur",
		"x",
		"y",
		"pointers",
		"length",
		"downTime",
		"getSwipe",
		"pageX",
		"value",
		"pageY",
		"clientX",
		"clientY",
		"dx",
		"dy",
		"velocityX",
		"velocityY",
		"_interaction",
		"angle",
		"Math",
		"atan2",
		"PI",
		"left",
		"up",
		"down",
		"right",
		"preventDefault",
		"stopImmediatePropagation",
		"immediatePropagationStopped",
		"propagationStopped",
		"stopPropagation"
	],
	"mappings": "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",
	"sourcesContent": [
		"import extend from '@interactjs/utils/extend'\nimport getOriginXY from '@interactjs/utils/getOriginXY'\nimport hypot from '@interactjs/utils/hypot'\nimport BaseEvent from './BaseEvent'\nimport Interaction from './Interaction'\nimport defaults from './defaultOptions'\n\nexport type EventPhase = keyof PhaseMap\n\nexport interface PhaseMap {\n  start: true\n  move: true\n  end: true\n}\n\nexport class InteractEvent<\n  T extends Interact.ActionName = never,\n  P extends EventPhase = EventPhase,\n> extends BaseEvent<T> {\n  target: Interact.Element\n  currentTarget: Interact.Element\n  relatedTarget: null = null\n  screenX?: number\n  screenY?: number\n  button: number\n  buttons: number\n  ctrlKey: boolean\n  shiftKey: boolean\n  altKey: boolean\n  metaKey: boolean\n  page: Interact.Point\n  client: Interact.Point\n  delta: Interact.Point\n  rect: Interact.FullRect\n  x0: number\n  y0: number\n  t0: number\n  dt: number\n  duration: number\n  clientX0: number\n  clientY0: number\n  velocity: Interact.Point\n  speed: number\n  swipe: ReturnType<InteractEvent<T>['getSwipe']>\n  timeStamp: any\n  // drag\n  dragEnter?: Interact.Element\n  dragLeave?: Interact.Element\n  // resize\n  axes?: 'x' | 'y' | 'xy'\n  preEnd?: boolean\n\n  /** */\n  constructor (\n    interaction: Interaction,\n    event: Interact.PointerEventType,\n    actionName: T,\n    phase: P,\n    element: Interact.Element,\n    preEnd?: boolean,\n    type?: string,\n  ) {\n    super(interaction)\n\n    element = element || interaction.element\n\n    const target      = interaction.interactable\n    const deltaSource = (((target && target.options) || defaults) as any).deltaSource as 'page' | 'client'\n    const origin      = getOriginXY(target, element, actionName)\n    const starting    = phase === 'start'\n    const ending      = phase === 'end'\n    const prevEvent   = starting ? this : interaction.prevEvent\n    const coords      = starting\n      ? interaction.coords.start\n      : ending\n        ? { page: prevEvent.page, client: prevEvent.client, timeStamp: interaction.coords.cur.timeStamp }\n        : interaction.coords.cur\n\n    this.page      = extend({}, coords.page)\n    this.client    = extend({}, coords.client)\n    this.rect      = extend({}, interaction.rect)\n    this.timeStamp = coords.timeStamp\n\n    if (!ending) {\n      this.page.x -= origin.x\n      this.page.y -= origin.y\n\n      this.client.x -= origin.x\n      this.client.y -= origin.y\n    }\n\n    this.ctrlKey       = event.ctrlKey\n    this.altKey        = event.altKey\n    this.shiftKey      = event.shiftKey\n    this.metaKey       = event.metaKey\n    this.button        = (event as MouseEvent).button\n    this.buttons       = (event as MouseEvent).buttons\n    this.target        = element\n    this.currentTarget = element\n    this.preEnd        = preEnd\n    this.type          = type || (actionName + (phase || ''))\n    this.interactable  = target\n\n    this.t0 = starting\n      ? interaction.pointers[interaction.pointers.length - 1].downTime\n      : prevEvent.t0\n\n    this.x0       = interaction.coords.start.page.x - origin.x\n    this.y0       = interaction.coords.start.page.y - origin.y\n    this.clientX0 = interaction.coords.start.client.x - origin.x\n    this.clientY0 = interaction.coords.start.client.y - origin.y\n\n    if (starting || ending) {\n      this.delta = { x: 0, y: 0 }\n    }\n    else {\n      this.delta = {\n        x: this[deltaSource].x - prevEvent[deltaSource].x,\n        y: this[deltaSource].y - prevEvent[deltaSource].y,\n      }\n    }\n\n    this.dt        = interaction.coords.delta.timeStamp\n    this.duration  = this.timeStamp - this.t0\n\n    // velocity and speed in pixels per second\n    this.velocity = extend({}, interaction.coords.velocity[deltaSource])\n    this.speed = hypot(this.velocity.x, this.velocity.y)\n\n    this.swipe = (ending || phase === 'inertiastart') ? this.getSwipe() : null\n  }\n\n  get pageX () { return this.page.x }\n  set pageX (value) { this.page.x = value }\n  get pageY () { return this.page.y }\n  set pageY (value) { this.page.y = value }\n\n  get clientX () { return this.client.x }\n  set clientX (value) { this.client.x = value }\n  get clientY () { return this.client.y }\n  set clientY (value) { this.client.y = value }\n\n  get dx () { return this.delta.x }\n  set dx (value) { this.delta.x = value }\n  get dy () { return this.delta.y }\n  set dy (value) { this.delta.y = value }\n\n  get velocityX () { return this.velocity.x }\n  set velocityX (value) { this.velocity.x = value }\n  get velocityY () { return this.velocity.y }\n  set velocityY (value) { this.velocity.y = value }\n\n  getSwipe () {\n    const interaction = this._interaction\n\n    if (interaction.prevEvent.speed < 600 ||\n        this.timeStamp - interaction.prevEvent.timeStamp > 150) {\n      return null\n    }\n\n    let angle = 180 * Math.atan2(interaction.prevEvent.velocityY, interaction.prevEvent.velocityX) / Math.PI\n    const overlap = 22.5\n\n    if (angle < 0) {\n      angle += 360\n    }\n\n    const left = 135 - overlap <= angle && angle < 225 + overlap\n    const up   = 225 - overlap <= angle && angle < 315 + overlap\n\n    const right = !left && (315 - overlap <= angle || angle <  45 + overlap)\n    const down  = !up   &&   45 - overlap <= angle && angle < 135 + overlap\n\n    return {\n      up,\n      down,\n      left,\n      right,\n      angle,\n      speed: interaction.prevEvent.speed,\n      velocity: {\n        x: interaction.prevEvent.velocityX,\n        y: interaction.prevEvent.velocityY,\n      },\n    }\n  }\n\n  preventDefault () {}\n\n  /**\n   * Don't call listeners on the remaining targets\n   */\n  stopImmediatePropagation () {\n    this.immediatePropagationStopped = this.propagationStopped = true\n  }\n\n  /**\n   * Don't call any other listeners (even on the current target)\n   */\n  stopPropagation () {\n    this.propagationStopped = true\n  }\n}\n\nexport default InteractEvent\n"
	]
}