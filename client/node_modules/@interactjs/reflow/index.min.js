import e from"../core/Interactable.min.js";import{Interaction as t}from"../core/Interaction.min.js";import{arr as n,extend as o,is as r,pointer as i,rect as s,win as l}from"../utils/index.min.js";export function install(e){const{Interactable:t}=e;e.actions.phases.reflow=!0,t.prototype.reflow=function(t){return function(e,t,o){const c=r.string(e.target)?n.from(e._context.querySelectorAll(e.target)):[e.target],p=l.window.Promise,f=p?[]:null;for(const r of c){const l=e.getRect(r);if(!l)break;const c=n.find(o.interactions.list,n=>n.interacting()&&n.interactable===e&&n.element===r&&n.prepared.name===t.name);let m;if(c)c.move(),f&&(m=c._reflowPromise||new p(e=>{c._reflowResolve=e}));else{const n=s.tlbrToXywh(l),c={page:{x:n.x,y:n.y},client:{x:n.x,y:n.y},timeStamp:o.now()},p=i.coordsToEvent(c);m=a(o,e,r,t,p)}f&&f.push(m)}return f&&p.all(f).then(()=>e)}(this,t,e)}}function a(e,t,n,r,i){const s=e.interactions.new({pointerType:"reflow"}),a={interaction:s,event:i,pointer:i,eventTarget:n,phase:"reflow"};s.interactable=t,s.element=n,s.prepared=o({},r),s.prevEvent=i,s.updatePointer(i,i,n,!0),s._doPhase(a);const c=l.window.Promise?new l.window.Promise(e=>{s._reflowResolve=e}):null;return s._reflowPromise=c,s.start(r,t,n),s._interacting?(s.move(a),s.end(i)):s.stop(),s.removePointer(i,i),s.pointerIsDown=!1,c}export default{id:"reflow",install:install,listeners:{"interactions:stop"({interaction:e},t){"reflow"===e.pointerType&&(e._reflowResolve&&e._reflowResolve(),n.remove(t.interactions.list,e))}}};
//# sourceMappingURL=index.min.js.map