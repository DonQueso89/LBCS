{"ast":null,"code":"var _jsxFileName = \"/Users/keesvanekeren/ledclimberpoc/client/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport interact from \"interactjs\";\nimport { partial } from 'ramda';\nconst numLeds = 5;\n\nfunction Led({\n  ledX,\n  ledY,\n  ledNumber\n}) {\n  return /*#__PURE__*/React.createElement(\"circle\", {\n    cx: ledX,\n    cy: ledY,\n    r: \"10\",\n    stroke: \"white\",\n    \"stroke-width\": \"1\",\n    fill: \"rgba(255, 0, 0, 0.5)\",\n    className: \"led\" + ledNumber,\n    id: \"led\" + ledNumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  });\n}\n\nclass FileInputOrImage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleLedMove = this.handleLedMove.bind(this);\n    this.fileInput = React.createRef();\n    let state = {\n      localFileUrl: \"\"\n    };\n    [Array(numLeds).keys()].map(i => {\n      state[\"led\" + i] = {\n        x: 50 + i * 20,\n        y: 50\n      };\n    });\n    this.state = state;\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const imgUrl = URL.createObjectURL(this.fileInput.current.files[0]);\n    this.setState({\n      localFileUrl: imgUrl\n    });\n  }\n\n  handleLedMove(event) {\n    const keyName = event.target.id;\n    window.eventtarget = event.target;\n    this.setState({\n      [keyName]: {\n        x: this.state[keyName].x + event.dx,\n        y: this.state[keyName].y + event.dy\n      }\n    });\n  }\n\n  componentDidMount() {\n    [...Array(numLeds)].map(i => {\n      interact(\".led\" + i).draggable({\n        listeners: {\n          start(event) {\n            console.log(event.type, event.target);\n          },\n\n          move: partial(this.handleLedMove, \"led\" + i)\n        }\n      });\n    });\n  }\n\n  componentDidUpdate() {\n    if (this.state && this.state.localFileUrl) {\n      const DOMImage = new Image(640, 425);\n      DOMImage.src = this.state.localFileUrl;\n    }\n  }\n\n  render() {\n    const style = {\n      imgOverlayWrap: {\n        position: \"relative\",\n        display: \"inline-block\"\n        /* <= shrinks container to image size */\n        ,\n        transition: \"transform 150ms ease-in-out\"\n      },\n      imgOverlayWrapImg: {\n        /* <= optional, for responsiveness */\n        display: \"block\",\n        maxWidth: \"100%\",\n        height: \"auto\"\n      },\n      imgOverlayWrapSvg: {\n        position: \"absolute\",\n        top: 0,\n        left: 0\n      }\n    };\n    const leds = [...Array(numLeds).keys()].map(idx => {\n      return /*#__PURE__*/React.createElement(Led, {\n        ledX: this.state[\"led\" + idx].x,\n        ledY: this.state[\"led\" + idx].y,\n        ledNumber: idx,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }\n      });\n    });\n    return this.state.localFileUrl.length ? /*#__PURE__*/React.createElement(\"div\", {\n      style: style.imgOverlayWrap,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      width: 1280,\n      height: 650,\n      src: this.state ? this.state.localFileUrl : \"\",\n      alt: \"no image found\",\n      style: style.imgOverlayWrapImg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"svg\", {\n      height: \"100%\",\n      width: \"100%\",\n      style: style.imgOverlayWrapSvg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }\n    }, leds)) : /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }\n    }, this.state.localFileUrl.length ? \"Nice pic\" : \"Upload a file of your wall\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      ref: this.fileInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }\n    }, \"Submit\"));\n  }\n\n}\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FileInputOrImage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/keesvanekeren/ledclimberpoc/client/src/App.js"],"names":["React","interact","partial","numLeds","Led","ledX","ledY","ledNumber","FileInputOrImage","Component","constructor","props","handleSubmit","bind","handleLedMove","fileInput","createRef","state","localFileUrl","Array","keys","map","i","x","y","event","preventDefault","imgUrl","URL","createObjectURL","current","files","setState","keyName","target","id","window","eventtarget","dx","dy","componentDidMount","draggable","listeners","start","console","log","type","move","componentDidUpdate","DOMImage","Image","src","render","style","imgOverlayWrap","position","display","transition","imgOverlayWrapImg","maxWidth","height","imgOverlayWrapSvg","top","left","leds","idx","length","App"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport interact from \"interactjs\";\nimport { partial } from 'ramda';\n\nconst numLeds = 5;\n\nfunction Led({ ledX, ledY, ledNumber }) {\n  return (\n    <circle\n      cx={ledX}\n      cy={ledY}\n      r=\"10\"\n      stroke=\"white\"\n      stroke-width=\"1\"\n      fill=\"rgba(255, 0, 0, 0.5)\"\n      className={\"led\" + ledNumber}\n      id={\"led\" + ledNumber}\n\n    />\n  );\n}\n\nclass FileInputOrImage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleLedMove = this.handleLedMove.bind(this);\n    this.fileInput = React.createRef();\n    let state = { localFileUrl: \"\" };\n\n    [Array(numLeds).keys()].map(i => {\n      state[\"led\" + i] = { x: 50 + i * 20, y: 50 };\n    })\n    this.state = state;\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const imgUrl = URL.createObjectURL(this.fileInput.current.files[0]);\n    this.setState({\n      localFileUrl: imgUrl,\n    });\n  }\n\n  handleLedMove(event) {\n    const keyName = event.target.id;\n    window.eventtarget = event.target\n    this.setState({\n      [keyName]: {\n        x: this.state[keyName].x + event.dx,\n        y: this.state[keyName].y + event.dy,\n      },\n    });\n  }\n\n  componentDidMount() {\n    [...Array(numLeds)].map(i => {\n      interact(\".led\" + i).draggable({\n        listeners: {\n          start(event) {\n            console.log(event.type, event.target);\n          },\n          move: partial(this.handleLedMove, \"led\" + i), \n        },\n      });\n    })\n  }\n\n  componentDidUpdate() {\n    if (this.state && this.state.localFileUrl) {\n      const DOMImage = new Image(640, 425);\n      DOMImage.src = this.state.localFileUrl;\n    }\n  }\n\n  render() {\n    const style = {\n      imgOverlayWrap: {\n        position: \"relative\",\n        display: \"inline-block\" /* <= shrinks container to image size */,\n        transition: \"transform 150ms ease-in-out\",\n      },\n      imgOverlayWrapImg: {\n        /* <= optional, for responsiveness */ display: \"block\",\n        maxWidth: \"100%\",\n        height: \"auto\",\n      },\n      imgOverlayWrapSvg: {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n      },\n    };\n\n    const leds = [...Array(numLeds).keys()].map((idx) => {\n      return (\n        <Led\n          ledX={this.state[\"led\" + idx].x}\n          ledY={this.state[\"led\" + idx].y}\n          ledNumber={idx}\n        />\n      );\n    });\n\n    return this.state.localFileUrl.length ? (\n      <div style={style.imgOverlayWrap}>\n        <img\n          width={1280}\n          height={650}\n          src={this.state ? this.state.localFileUrl : \"\"}\n          alt=\"no image found\"\n          style={style.imgOverlayWrapImg}\n        />\n        <svg height=\"100%\" width=\"100%\" style={style.imgOverlayWrapSvg}>\n          {leds}\n        </svg>\n      </div>\n    ) : (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          <p>\n            {this.state.localFileUrl.length\n              ? \"Nice pic\"\n              : \"Upload a file of your wall\"}\n          </p>\n          <input type=\"file\" ref={this.fileInput} />\n        </label>\n        <br />\n        <button type=\"submit\">Submit</button>\n      </form>\n    );\n  }\n}\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <FileInputOrImage />\n      </header>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}