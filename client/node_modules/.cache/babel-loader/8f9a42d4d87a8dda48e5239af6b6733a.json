{"ast":null,"code":"var _jsxFileName = \"/Users/keesvanekeren/ledclimberpoc/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nconst numLeds = 5;\n\nfunction Led() {\n  return /*#__PURE__*/React.createElement(\"svg\", {\n    height: \"100\",\n    width: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"50\",\n    cy: \"50\",\n    r: \"10\",\n    stroke: \"black\",\n    \"stroke-width\": \"3\",\n    fill: \"rgba(255, 0, 0, 0.8)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 3\n    }\n  }));\n}\n\nclass FileInputOrImage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.fileInput = React.createRef();\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const imgUrl = URL.createObjectURL(this.fileInput.current.files[0]);\n    this.setState({\n      localFileUrl: imgUrl\n    });\n  }\n\n  componentDidMount() {\n    window.context = this.ctx;\n  }\n\n  componentDidUpdate() {\n    if (this.state && this.state.localFileUrl) {\n      const DOMImage = new Image(640, 425);\n      DOMImage.src = this.state.localFileUrl;\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, this.state ? \"Nice pic\" : \"Upload a file of your wall\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      ref: this.fileInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, \"Submit\")), /*#__PURE__*/React.createElement(\"img\", {\n      width: 1280,\n      height: 650,\n      src: this.state ? this.state.localFileUrl : \"\",\n      alt: \"no image found\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Led, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FileInputOrImage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/keesvanekeren/ledclimberpoc/src/App.js"],"names":["React","numLeds","Led","FileInputOrImage","Component","constructor","props","handleSubmit","bind","fileInput","createRef","event","preventDefault","imgUrl","URL","createObjectURL","current","files","setState","localFileUrl","componentDidMount","window","context","ctx","componentDidUpdate","state","DOMImage","Image","src","render","App"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\nconst numLeds = 5;\n\nfunction Led() {\n  return <svg height=\"100\" width=\"100\">\n  <circle cx=\"50\" cy=\"50\" r=\"10\" stroke=\"black\" stroke-width=\"3\" fill=\"rgba(255, 0, 0, 0.8)\" />\n</svg>\n}\n\nclass FileInputOrImage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.fileInput = React.createRef();\n  }\n  handleSubmit(event) {\n    event.preventDefault();\n    const imgUrl = URL.createObjectURL(this.fileInput.current.files[0]);\n    this.setState({\n      localFileUrl: imgUrl,\n    });\n  }\n\n  componentDidMount() {\n    window.context = this.ctx\n  }\n\n  componentDidUpdate() {\n    if (this.state && this.state.localFileUrl) {\n      const DOMImage = new Image(640, 425)\n      DOMImage.src = this.state.localFileUrl\n      \n    }\n  }\n\n  render() {\n    return (\n      <div>\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          <p>{this.state ? \"Nice pic\" : \"Upload a file of your wall\"}</p>\n          <input type=\"file\" ref={this.fileInput} />\n        </label>\n        <br />\n        <button type=\"submit\">Submit</button>\n      </form>\n      <img width={1280} height={650} src={this.state ? this.state.localFileUrl : \"\"} alt=\"no image found\" />\n        <Led/>\n      </div>\n    );\n  }\n}\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <FileInputOrImage />\n      </header>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}